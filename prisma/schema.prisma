generator client {
  provider        = "prisma-client-js"
  output          = "../node_modules/@prisma/client"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "postgresql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Game {
  id            String         @id @unique @default(cuid())
  name          String
  tournament    String
  weWin         Win
  ourTeam       Team
  version       Int            @default(0)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  markers       Points[]
  rankingPoints RankingPoint[]

  @@map("game")
}

model Points {
  id         String   @id @unique @default(cuid())
  isAuto     Boolean
  pointType  String
  pointValue Int
  left       Float?
  top        Float?
  gameId     String?
  Game       Game?    @relation(fields: [gameId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  launches   Launch[]

  @@map("points")
}

model Launch {
  id       String       @id @unique @default(cuid())
  type     LaunchStatus
  markerId String
  Marker   Points       @relation(fields: [markerId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("launch")
}

model RankingPoint {
  id          String @id @unique @default(cuid())
  type        String
  numberScore Int
  minScore    Int
  maxScore    Int
  gameId      String
  Game        Game   @relation(fields: [gameId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("rankingPoint")
}

enum LaunchStatus {
  GotInUpper
  GotInLower
  BounceOut
  MissClose
  MissFar
  NoLaunch

  @@map("launchStatus")
}

enum Team {
  Red
  Blue
}

enum Win {
  Win
  Lose
  Tie
}
